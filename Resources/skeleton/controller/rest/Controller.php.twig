<?php

namespace {{ namespace }}\Controller;

{% block use_statements %}
use {{ entityClass }} as Entity;
use Draw\DrawBundle\Controller\DoctrineControllerTrait;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Draw\Swagger\Schema as Swagger;
use FOS\RestBundle\Controller\Annotations as Rest;
{% endblock use_statements %}

{% block class_definition %}
class {{ controller }}Controller extends Controller
{% endblock class_definition %}
{
{% block class_body %}
    use DoctrineControllerTrait;

    /**
     * Create a {{ entityShortName }}
     *
     * @Swagger\Tag(name="{{ controller }}")
     *
     * @Rest\Post("/{{ entityDash }}s", name="{{ entityUnderScore }}_create")
     *
     * @Rest\View(statusCode=201, serializerGroups={"{{ entityDash }}:read})
     *
     * @ParamConverter(
     *     name="entity",
     *     converter="fos_rest.request_body",
     *     options={
     *         "validator"={"groups"={"{{ entityDash }}:create"}},
     *         "deserializationContext"={"groups"={"{{ entityDash }}:create"}}
     *     }
     * )
     *
     * @Security("has_role('ROLE_USER')")
     *
     * @param Entity $entity
     * @return \{{ entityClass }}
     */
    public function createAction(Entity $entity)
    {
        return $this->persistAndFlush($entity);
    }

    /**
     * Get a {{ entityShortName }}
     *
     * @Swagger\Tag(name="{{ controller }}")
     *
     * @Rest\Get("/{{ entityDash }}s/{id}", name="{{ entityUnderScore }}_get")
     *
     * @Rest\View(serializerGroups={"{{ entityDash }}:read})
     *
     * @ParamConverter(name="entity")
     *
     * @Security("has_role('ROLE_USER')")
     *
     * @param Entity $entity
     *
     * @return \{{ entityClass }}
     */
    public function getAction(Entity $entity)
    {
        return $entity;
    }

    /**
     * Update a {{ entityShortName }}
     *
     * @Swagger\Tag(name="{{ controller }}")
     *
     * @Rest\Get("/{{ entityDash }}s/{id}", name="{{ entityUnderScore }}_update")
     *
     * @Rest\View(serializerGroups={"{{ entityDash }}:read})
     *
     * @ParamConverter(
     *     name="entity",
     *     converter="fos_rest.request_body",
     *     options={
     *         "propertiesMap"={"id":"id"},
     *         "validator"={"groups"={"{{ entityDash }}:update"}},
     *         "deserializationContext"={"groups"={"{{ entityDash }}:update"}}
     *     }
     * )
     *
     * @Security("is_granted('OWN', entity))
     *
     * @param Entity $entity
     *
     * @return \{{ entityClass }}
     */
    public function updateAction(Entity $entity)
    {
        return $this->flush($entity);
    }

    /**
     * List {{ entityShortName }}s
     *
     * @Swagger\Tag(name="{{ controller }}")
     *
     * @Rest\Get("/{{ entityDash }}s", name="{{ entityUnderScore }}_list")
     *
     * @Rest\View(serializerGroups={"{{ entityDash }}:read})
     *
     * @Security("has_role('ROLE_USER')")
     *
     * @return \{{ entityClass }}[]
     */
    public function listAction()
    {
        return $this->createOrmQueryBuilder("{{ bundle }}:{{ entityShortName }}", "entity")
            //->where()
            //->setParameter()
            ->getQuery()
            //->setMaxResults(50)
            ->getResult();
    }

    /**
     * Delete a {{ entityShortName }}
     *
     * @Swagger\Tag(name="{{ controller }}")
     *
     * @Rest\Get("/{{ entityDash }}s/{id}", name="{{ entityUnderScore }}_delete")
     *
     * @Rest\View(statusCode=204)
     *
     * @ParamConverter(name="entity")
     *
     * @Security("is_granted('OWN', entity))
     *
     * @param Entity $entity
     */
    public function deleteAction(Entity $entity)
    {
        return $this->removeAndFlush($entity);
    }
{% endblock class_body %}
}
